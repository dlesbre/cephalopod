
1+3;

let f x = x+1;


let foo x y =
    let inc i = i+1 in
    let tmp = x+x in
    let t2 = inc (y*y) in
    let t2 = tmp+t2 in
    t2-tmp+1
;

letrec fact n = (n = 1) => 1 | n*(fact (n-1));

fact 4;
fact 1000;


letrec fac 0 = 1
 /\    fac n = n*fac (n-1)
;

map fac [1,2,3,4,5,6,7];


//(1--20);
map fact (1--20);


lettype tree = BR tree tree | LF int;


let tr = BR (BR (LF 1) (LF 5)) (BR (LF 2) (LF 99));

letrec tree_sum (BR e f) = tree_sum e + tree_sum f
 /\    tree_sum (LF i) = i
;

tree_sum tr;



letrec fib 0 = 1
 /\    fib 1 = 1
 /\    fib n = fib (n-1) + fib (n-2)
;

fib 6;
fib 22;
fib 23;

fib 25;

cletrec fib 0 = 1
  /\    fib 1 = 1
  /\    fib n = fib (n-1) + fib (n-2)
;

fib 25;
fib 100;






let a = variable "A";
let b = variable "B";
let c = variable "c";

let ex1 = a AND (b OR c);
ex1;

draw_bdds F [ex1];


let ex2 = NOT (a AND b);
let ex3 = NOT a OR NOT b;
let ex4 = NOT a OR b;

ex2 == ex3;

ex2 == ex4;

ex2 = ex4;



let oink x y =
    let tmp = x+x in
    let t2 = y*y in
    let t2 = tmp+t2 in
    t2-tmp
;

oink 1 2;
oink 1.0 2.0;



load "ste.fl";

TYPE "byte" 8;

let avg =
    byte_input a b c d.
    byte_output out.
    byte_internal m1 m2 m3 m4.
    CELL "avg" [
	m1 <- a '+' b '+' c '+' d,
	out <- m1 '/' '4
];

let p = avg 'a 'b 'c 'd 'out;

let vis = STE_debug (pexlif2fsm p);

let ant = 
    "a[7:0]" is 0 in_cycle 0 followed_by
		1 in_cycle 1 followed_by
		2 in_cycle 2 followed_by
		"x1[7:0]" in_cycle 3 
  and
    "b[7:0]" is 4 in_cycle 0 followed_by
		3 in_cycle 1 followed_by
		7 in_cycle 2 followed_by
		0 in_cycle 3 
  and
    "c[7:0]" is 9 in_cycle 0 followed_by
		2 in_cycle 1 followed_by
		8 in_cycle 2 followed_by
		"x2[7:0]" in_cycle 3 
  and
    "d[7:0]" is 7 in_cycle 0 followed_by
		7 in_cycle 1 followed_by
		3 in_cycle 2 followed_by
		0 in_cycle 3 
;

STE "-e" vis [] ant [] [];
