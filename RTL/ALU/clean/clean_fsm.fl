// clean_manager (autogenerated by Stately)

ENUM "clean_manager_state"
    [ "clean_manager__CHECK"
    , "clean_manager__DONE"
    , "clean_manager__FINAL_CHECK"
    , "clean_manager__IDLE"
    , "clean_manager__READ"
    , "clean_manager__UPDATE"
    , "clean_manager__WAIT_READ"
    , "clean_manager__WAIT_UPDATE"
    , "clean_manager__WRITE"
    ];

let clean_manager =
    // clock
    bit_input clk.
    // inputs
    bit_input did_read.
    bit_input did_update.
    bit_input did_write.
    bit_input do_op.
    bit_input rect.
    bit_input res_end.
    bit_input reset.
    // outputs
    bit_output did_op.
    bit_output do_read.
    bit_output do_update.
    bit_output do_write.
    bit_output flush.
    // internals
    // state
    clean_manager_state_internal state.
    CELL "draw_hier clean_manager"
        [ Moore_FSM "clean_manager_moore" clk state (reset, clean_manager__IDLE)
              [ clean_manager__DONE --- ('~' do_op) --- clean_manager__IDLE
              , clean_manager__IDLE --- do_op --- clean_manager__READ
              , clean_manager__READ --- (did_read '&' did_update '&' res_end '&' rect) --- clean_manager__WRITE
              , clean_manager__READ --- (did_read '&' did_update '&' res_end '&' ('~' rect)) --- clean_manager__DONE
              , clean_manager__READ --- (did_read '&' did_update '&' ('~' res_end) '&' did_read) --- clean_manager__WAIT_READ
              , clean_manager__READ --- (did_read '&' did_update '&' ('~' res_end) '&' ('~' did_read)) --- clean_manager__READ
              , clean_manager__READ --- (did_read '&' ('~' did_update)) --- clean_manager__WAIT_UPDATE
              , clean_manager__WAIT_READ --- ('~' did_read) --- clean_manager__READ
              , clean_manager__WAIT_UPDATE --- (did_update '&' res_end '&' rect) --- clean_manager__WRITE
              , clean_manager__WAIT_UPDATE --- (did_update '&' res_end '&' ('~' rect)) --- clean_manager__DONE
              , clean_manager__WAIT_UPDATE --- (did_update '&' ('~' res_end) '&' did_read) --- clean_manager__WAIT_READ
              , clean_manager__WAIT_UPDATE --- (did_update '&' ('~' res_end) '&' ('~' did_read)) --- clean_manager__READ
              , clean_manager__WAIT_UPDATE --- ('~' did_update) --- clean_manager__WAIT_UPDATE
              , clean_manager__WRITE --- did_write --- clean_manager__DONE
              ]
        , do_write <- (is_clean_manager__WRITE state)
        , flush <- (is_clean_manager__IDLE state)
        , do_read <- (is_clean_manager__READ state)
        , do_update <- (((is_clean_manager__READ state) '&' did_read) '|' (is_clean_manager__WAIT_UPDATE state))
        , did_op <- (is_clean_manager__DONE state)
        ];

