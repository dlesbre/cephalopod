(("initial" "idle") ("name" "reduction_fsm") ("signals" ((("code" "") ("description" "") ("internal" 0) ("kind" input) ("name" "reset") ("priority" -100)) (("code" "") ("description" "Is the arity of the primitive/combinator (in node_data) zero? (arity == 0)") ("internal" 0) ("kind" input) ("name" "arity_zero") ("priority" 0)) (("code" "") ("description" "") ("internal" 0) ("kind" statewise) ("name" "between_jobs") ("priority" 0)) (("code" "") ("description" "") ("internal" 0) ("kind" input) ("name" "comb_ack") ("priority" 0)) (("code" "") ("description" "") ("internal" 0) ("kind" statewise) ("name" "comb_req") ("priority" 0)) (("code" "") ("description" "") ("internal" 0) ("kind" statewise) ("name" "dec_alloc_idx") ("priority" 0)) (("code" "") ("description" "") ("internal" 0) ("kind" input) ("name" "empty_stack") ("priority" 0)) (("code" "") ("description" "") ("internal" 0) ("kind" statewise) ("name" "evaluation_done") ("priority" 0)) (("code" "") ("description" "") ("internal" 0) ("kind" statewise) ("name" "fetch") ("priority" 0)) (("code" "") ("description" "Set gp equal to the left child of the current node (node_data.left).") ("internal" 0) ("kind" statewise) ("name" "go_left") ("priority" 0)) (("code" "") ("description" "") ("internal" 0) ("kind" statewise) ("name" "inc_arg_idx") ("priority" 0)) (("code" "") ("description" "Is the node in the node_data flop an apply node?") ("internal" 0) ("kind" input) ("name" "is_apply") ("priority" 0)) (("code" "") ("description" "Is the node in the node_data flop a combinator node?") ("internal" 0) ("kind" input) ("name" "is_comb") ("priority" 0)) (("code" "") ("description" "Is the node in the node_data flop a primitive function node?") ("internal" 0) ("kind" input) ("name" "is_prim") ("priority" 0)) (("code" "") ("description" "") ("internal" 0) ("kind" input) ("name" "jmp") ("priority" 0)) (("code" "") ("description" "Are we on the last alloc? (I.e., is alloc_idx == 0)") ("internal" 0) ("kind" input) ("name" "last_alloc") ("priority" 0)) (("code" "") ("description" "Are we on the last arg? (I.e., is arg_idx + 1 == arity?)") ("internal" 0) ("kind" input) ("name" "last_arg") ("priority" 0)) (("code" "") ("description" "") ("internal" 0) ("kind" statewise) ("name" "load_alloc_addr") ("priority" 0)) (("code" "") ("description" "") ("internal" 0) ("kind" statewise) ("name" "load_alloc_idx") ("priority" 0)) (("code" "") ("description" "Flop the writeback data coming from the combinator unit. This includes: data for all of the allocations, and new data for the redex.") ("internal" 0) ("kind" statewise) ("name" "load_comb_results") ("priority" 0)) (("code" "") ("description" "") ("internal" 0) ("kind" statewise) ("name" "load_node_data") ("priority" 0)) (("code" "") ("description" "Set args[arg_idx] to the right-child from the popped (address, right-child) pair.") ("internal" 0) ("kind" statewise) ("name" "load_pop_arg") ("priority" 0)) (("code" "") ("description" "Set gp to the address from the popped (address, right-child) pair.") ("internal" 0) ("kind" statewise) ("name" "load_pop_gp") ("priority" 0)) (("code" "") ("description" "Flop the writeback data coming from the primitive function unit. This includes: data for all of the allocations, and new data for the redex.") ("internal" 0) ("kind" statewise) ("name" "load_prim_results") ("priority" 0)) (("code" "") ("description" "") ("internal" 0) ("kind" statewise) ("name" "load_swap_left") ("priority" 0)) (("code" "") ("description" "") ("internal" 0) ("kind" statewise) ("name" "load_swap_right") ("priority" 0)) (("code" "") ("description" "") ("internal" 0) ("kind" input) ("name" "mem_alloc_ack") ("priority" 0)) (("code" "") ("description" "") ("internal" 0) ("kind" statewise) ("name" "mem_alloc_req") ("priority" 0)) (("code" "") ("description" "") ("internal" 0) ("kind" statewise) ("name" "mem_read_req") ("priority" 0)) (("code" "") ("description" "") ("internal" 0) ("kind" input) ("name" "mem_rw_ack") ("priority" 0)) (("code" "") ("description" "") ("internal" 0) ("kind" statewise) ("name" "mem_write_req") ("priority" 0)) (("code" "") ("description" "Does the primitive/combinator (in node_data) request zero allocations? (to_alloc == 0)") ("internal" 0) ("kind" input) ("name" "no_alloc") ("priority" 0)) (("code" "") ("description" "") ("internal" 0) ("kind" input) ("name" "prim_ack") ("priority" 0)) (("code" "") ("description" "") ("internal" 0) ("kind" statewise) ("name" "prim_req") ("priority" 0)) (("code" "") ("description" "Put the address stored in alloc[alloc_idx] on the address bus.") ("internal" 0) ("kind" statewise) ("name" "put_alloc_addr") ("priority" 0)) (("code" "") ("description" "") ("internal" 0) ("kind" statewise) ("name" "put_alloc_data") ("priority" 0)) (("code" "") ("description" "Put the Graph Pointer address on the address bus.") ("internal" 0) ("kind" statewise) ("name" "put_gp_addr") ("priority" 0)) (("code" "") ("description" "Put the new redex data (from comb/prim unit) on the data bus.") ("internal" 0) ("kind" statewise) ("name" "put_redex_data") ("priority" 0)) (("code" "") ("description" "") ("internal" 0) ("kind" statewise) ("name" "put_swap_data") ("priority" 0)) (("code" "") ("description" "Allow the reduction engine to begin a new reduction. The reduction may begin on the same state this is raised.") ("internal" 0) ("kind" input) ("name" "reducto") ("priority" 0)) (("code" "") ("description" "") ("internal" 0) ("kind" statewise) ("name" "reset_arg_idx") ("priority" 0)) (("code" "") ("description" "") ("internal" 0) ("kind" input) ("name" "should_overwrite_redex") ("priority" 0)) (("code" "") ("description" "") ("internal" 0) ("kind" input) ("name" "stack_ack") ("priority" 0)) (("code" "") ("description" "") ("internal" 0) ("kind" input) ("name" "stack_nack") ("priority" 0)) (("code" "") ("description" "") ("internal" 0) ("kind" statewise) ("name" "stack_pop_req") ("priority" 0)) (("code" "") ("description" "") ("internal" 0) ("kind" statewise) ("name" "stack_push_req") ("priority" 0)))) ("states" ((("code" "emit evaluation_done\nif jmp\n    goto begin\n") ("description" "") ("name" "Done") ("virtual" 0) ("x" 2) ("y" 329)) (("code" "emit mem_alloc_req\nif mem_alloc_ack\n  emit load_alloc_addr\n  goto next_alloc") ("description" "") ("name" "alloc") ("virtual" 0) ("x" 959) ("y" 596)) (("code" "if no_alloc\n  goto done_allocate\nelse\n  goto pre_alloc") ("description" "") ("name" "allocate") ("virtual" 1) ("x" 768) ("y" 545)) (("code" "if reducto\n  goto walk_spine\nelse\n  goto idle\n  emit between_jobs") ("description" "Begin reducing if allowed, otherwise wait.") ("name" "begin") ("virtual" 1) ("x" -15) ("y" -43)) (("code" "emit comb_req\nif comb_ack\n  emit load_comb_results\n  goto inefficient") ("description" "") ("name" "comb") ("virtual" 0) ("x" 917) ("y" 870)) (("code" "emit load_alloc_idx\nemit reset_arg_idx\nif is_apply\n  goto handle_apply\nelif (or is_comb is_prim)\n  goto handle_fn\nelse\n  goto handle_swap") ("description" "") ("name" "decode") ("virtual" 1) ("x" 415) ("y" 164)) (("code" "if is_comb\n  goto pre_comb\nelse\n  -- is_prim\n  goto pre_prim") ("description" "") ("name" "done_allocate") ("virtual" 1) ("x" 779) ("y" 628)) (("code" "goto allocate") ("description" "") ("name" "done_pop_args") ("virtual" 1) ("x" 736) ("y" 395)) (("code" "goto writeback_redex") ("description" "") ("name" "done_writeback_alloc") ("virtual" 1) ("x" 773) ("y" 1155)) (("code" "goto reduction_done") ("description" "") ("name" "done_writeback_redex") ("virtual" 1) ("x" 671) ("y" 1296)) (("code" "") ("description" "") ("name" "error_stack") ("virtual" 0) ("x" 619) ("y" 535)) (("code" "goto pre_push_node") ("description" "") ("name" "handle_apply") ("virtual" 1) ("x" 325) ("y" 220)) (("code" "goto pop_args") ("description" "") ("name" "handle_fn") ("virtual" 1) ("x" 577) ("y" 217)) (("code" "if empty_stack\n    goto Done\nelse\n    goto swap_left") ("description" "") ("name" "handle_swap") ("virtual" 1) ("x" 408) ("y" 303)) (("code" "goto begin") ("description" "") ("name" "idle") ("virtual" 0) ("x" 96) ("y" -119)) (("code" "goto writeback_alloc") ("description" "Not using \"zero-delay flops\" so need to wait here for results to flop. Fix that and remove me later!") ("name" "inefficient") ("virtual" 0) ("x" 784) ("y" 976)) (("code" "emit dec_alloc_idx\nif last_alloc\n  goto done_allocate\nelse\n  goto pre_alloc") ("description" "") ("name" "next_alloc") ("virtual" 1) ("x" 862) ("y" 613)) (("code" "emit inc_arg_idx\nif last_arg\n  goto done_pop_args\nelse\n  goto pre_pop") ("description" "") ("name" "next_arg") ("virtual" 1) ("x" 814) ("y" 362)) (("code" "emit dec_alloc_idx\nif last_alloc\n  goto done_writeback_alloc\nelse\n  goto pre_wba") ("description" "") ("name" "next_wba") ("virtual" 1) ("x" 861) ("y" 1170)) (("code" "emit stack_pop_req\nif stack_nack\n  goto error_stack\nelif stack_ack\n  emit load_pop_arg\n  emit load_pop_gp\n  goto next_arg") ("description" "") ("name" "pop") ("virtual" 0) ("x" 902) ("y" 330)) (("code" "if arity_zero\n  goto done_pop_args\nelse\n  goto pre_pop") ("description" "Pop the requisite number of arguments from the stack.") ("name" "pop_args") ("virtual" 1) ("x" 711) ("y" 309)) (("code" "if mem_alloc_ack\n  goto wait_alloc\nelse\n  goto alloc") ("description" "") ("name" "pre_alloc") ("virtual" 1) ("x" 850) ("y" 531)) (("code" "if comb_ack\n  goto wait_comb\nelse\n  goto comb") ("description" "") ("name" "pre_comb") ("virtual" 1) ("x" 918) ("y" 794)) (("code" "if stack_ack\n  goto wait_pop\nelse\n  goto pop") ("description" "") ("name" "pre_pop") ("virtual" 1) ("x" 787) ("y" 276)) (("code" "if prim_ack\n  goto wait_prim\nelse\n  goto prim") ("description" "") ("name" "pre_prim") ("virtual" 1) ("x" 673) ("y" 797)) (("code" "if stack_ack\n  goto wait_push_node\nelse\n  goto push_node") ("description" "") ("name" "pre_push_node") ("virtual" 1) ("x" 208) ("y" 176)) (("code" "if mem_rw_ack\n  goto wait_read_gp\nelse\n  goto read_gp") ("description" "") ("name" "pre_read_gp") ("virtual" 1) ("x" 285) ("y" -18)) (("code" "if stack_ack\n  goto wait_swap_pop\nelse\n  goto swap_pop") ("description" "") ("name" "pre_swap_pop") ("virtual" 1) ("x" 364) ("y" 497)) (("code" "if mem_rw_ack\n  goto wait_swap_wb\nelse\n  goto swap_wb") ("description" "") ("name" "pre_swap_wb") ("virtual" 1) ("x" 375) ("y" 672)) (("code" "if mem_rw_ack\n  goto wait_wba\nelse\n  goto wba") ("description" "") ("name" "pre_wba") ("virtual" 1) ("x" 879) ("y" 1078)) (("code" "if mem_rw_ack\n  goto wait_wbr\nelse\n  goto wbr") ("description" "") ("name" "pre_wbr") ("virtual" 1) ("x" 771) ("y" 1282)) (("code" "emit prim_req\nif prim_ack\n  emit load_prim_results\n  goto inefficient") ("description" "") ("name" "prim") ("virtual" 0) ("x" 674) ("y" 874)) (("code" "emit stack_push_req\nif stack_ack\n  emit go_left\n  goto walk_spine") ("description" "") ("name" "push_node") ("virtual" 0) ("x" 138) ("y" 144)) (("code" "emit mem_read_req\nemit put_gp_addr\nif mem_rw_ack\n  emit load_node_data\n  goto decode") ("description" "") ("name" "read_gp") ("virtual" 0) ("x" 335) ("y" 35)) (("code" "goto begin") ("description" "") ("name" "reduction_done") ("virtual" 1) ("x" 272) ("y" 837)) (("code" "goto reduction_done") ("description" "") ("name" "swap_done") ("virtual" 1) ("x" 412) ("y" 859)) (("code" "emit load_swap_left\ngoto pre_swap_pop") ("description" "") ("name" "swap_left") ("virtual" 0) ("x" 405) ("y" 401)) (("code" "emit stack_pop_req\nif stack_nack\n  goto error_stack\nelif stack_ack\n  emit load_pop_gp\n  emit load_swap_right\n  goto pre_swap_wb") ("description" "") ("name" "swap_pop") ("virtual" 0) ("x" 413) ("y" 566)) (("code" "emit put_gp_addr\nemit put_swap_data\nemit mem_write_req\nif mem_rw_ack\n  goto swap_done") ("description" "") ("name" "swap_wb") ("virtual" 0) ("x" 415) ("y" 743)) (("code" "goto pre_alloc") ("description" "") ("name" "wait_alloc") ("virtual" 0) ("x" 945) ("y" 515)) (("code" "goto pre_comb") ("description" "") ("name" "wait_comb") ("virtual" 0) ("x" 1007) ("y" 797)) (("code" "goto pre_pop") ("description" "") ("name" "wait_pop") ("virtual" 0) ("x" 876) ("y" 250)) (("code" "goto pre_prim") ("description" "") ("name" "wait_prim") ("virtual" 0) ("x" 759) ("y" 797)) (("code" "goto pre_push_node") ("description" "") ("name" "wait_push_node") ("virtual" 0) ("x" 145) ("y" 214)) (("code" "goto pre_read_gp") ("description" "") ("name" "wait_read_gp") ("virtual" 0) ("x" 360) ("y" -27)) (("code" "goto pre_swap_pop") ("description" "") ("name" "wait_swap_pop") ("virtual" 0) ("x" 458) ("y" 497)) (("code" "goto pre_swap_wb") ("description" "") ("name" "wait_swap_wb") ("virtual" 0) ("x" 455) ("y" 672)) (("code" "goto pre_wba") ("description" "") ("name" "wait_wba") ("virtual" 0) ("x" 966) ("y" 1096)) (("code" "goto pre_wbr") ("description" "") ("name" "wait_wbr") ("virtual" 0) ("x" 829) ("y" 1325)) (("code" "goto pre_read_gp\nemit fetch") ("description" "") ("name" "walk_spine") ("virtual" 1) ("x" 124) ("y" 9)) (("code" "emit put_alloc_addr\nemit put_alloc_data\nemit mem_write_req\nif mem_rw_ack\n  goto next_wba") ("description" "") ("name" "wba") ("virtual" 0) ("x" 953) ("y" 1188)) (("code" "emit put_gp_addr\nemit put_redex_data\nemit mem_write_req\nif mem_rw_ack\n  goto done_writeback_redex") ("description" "") ("name" "wbr") ("virtual" 0) ("x" 759) ("y" 1354)) (("code" "emit load_alloc_idx\nif no_alloc\n  goto done_writeback_alloc\nelse\n  goto pre_wba") ("description" "") ("name" "writeback_alloc") ("virtual" 1) ("x" 790) ("y" 1061)) (("code" "if should_overwrite_redex\n  goto pre_wbr\nelse\n  goto done_writeback_redex") ("description" "") ("name" "writeback_redex") ("virtual" 1) ("x" 716) ("y" 1237)))))
